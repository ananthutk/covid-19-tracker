{"version":3,"sources":["components/CountryCaseStatus/CountryCaseStatus.tsx","actions/countryDataAction.ts","components/Header/Header.tsx","components/MapView/MapView.tsx","components/MapView/SwitchStates.ts","components/StateSelector/StateSelector.tsx","actions/allStatesTotalDataAction.ts","App.tsx","serviceWorker.ts","reducers/countryDataReducer.ts","reducers/allStatesTotalDataReducer.ts","reducers/index.ts","index.tsx"],"names":["CountryCaseStatus","dispatch","useDispatch","countryData","useSelector","state","useEffect","axios","get","then","response","data","type","payload","catch","error","fetchCountryDataFailure","className","confirmed","active","recovered","deaths","Header","style","fontWeight","MapView","filteredData","pieConfirmedTotal","pieActive","pieRecovered","pieDeaths","useState","currentPlace","setCurrentPlace","lat","setLat","lng","setLng","zoom","totalConfirmed","setTotalConfirmed","setActive","setRecovered","setDeaths","console","log","length","Object","values","map","item","switchStates","position","Map","center","TileLayer","attribution","url","Marker","Popup","StateSelector","totalData","setTotalData","currentState","setcurrentState","setFilteredData","allStatesTotalData","loading","pieConfirmedtotal","reduce","t","labels","bardata","x","y","Plotly","height","width","fetchallStatesTotalDataFailure","filter","padding","onChange","e","value","target","key","id","App","Boolean","window","location","hostname","match","initialState","countryDataReducer","action","allStatesDataReducer","rootReducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"2NA0CeA,MAlCf,WAEE,IAAMC,EAAWC,cACXC,EAAcC,aAAY,SAACC,GAAD,OAAyBA,EAAMF,eAS/D,OAPAG,qBAAU,WAERL,GCGK,SAACA,GAENM,IAAMC,IAAI,gDACPC,MAAK,SAACC,GAGL,IAAMC,EAAoBD,EAASC,KACnCV,EArBC,CACLW,KAAM,4BACNC,QAmBqCF,OAElCG,OAAM,SAACC,GAENd,EAnB+B,SAACc,GACtC,MAAO,CACLH,KAAM,4BACNC,QAASE,GAgBIC,CAAwBD,YDbpC,IAKD,yBAAKE,UAAU,eACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,aAAf,yBACA,yBAAKA,UAAU,aAAad,EAAYe,YAE1C,yBAAKD,UAAU,cACb,yBAAKA,UAAU,aAAf,gBACA,yBAAKA,UAAU,aAAad,EAAYgB,SAE1C,yBAAKF,UAAU,cACb,yBAAKA,UAAU,aAAf,mBACA,yBAAKA,UAAU,aAAad,EAAYiB,YAE1C,yBAAKH,UAAU,cACb,yBAAKA,UAAU,aAAf,UACA,yBAAKA,UAAU,aAAad,EAAYkB,WE1BjCC,MARf,WACE,OACE,6BACE,wBAAIC,MAAO,CAACC,WAAW,MAAvB,4B,kECgESC,MAvDf,YAAmG,IAAhFC,EAA+E,EAA/EA,aAAcC,EAAiE,EAAjEA,kBAAmBC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,UAAqB,EAExDC,mBAAS,SAF+C,mBAEzFC,EAFyF,KAE3EC,EAF2E,OAG1EF,mBAAS,SAHiE,mBAGzFG,EAHyF,KAGpFC,EAHoF,OAI1EJ,mBAAS,SAJiE,mBAIzFK,EAJyF,KAIpFC,EAJoF,OAKxEN,mBAAS,IAL+D,mBAKzFO,EALyF,aAMpDP,sBANoD,mBAMzFQ,EANyF,KAMzEC,EANyE,OAOpET,qBAPoE,mBAOzFZ,EAPyF,KAOjFsB,EAPiF,OAQ9DV,qBAR8D,mBAQzFX,EARyF,KAQ9EsB,EAR8E,OASpEX,qBAToE,mBASzFV,EATyF,KASjFsB,EATiF,KAWhGrC,qBAAU,WACRsC,QAAQC,IAAI,YAAanB,GACzBkB,QAAQC,IAAI,cAAenB,EAAaoB,QAEpCpB,EAAaoB,OAAS,GACxBX,EAAO,SACPE,EAAO,SACPG,EAAkBb,GAClBc,EAAUb,GACVc,EAAab,GACbc,EAAUb,IAEViB,OAAOC,OAAOtB,GAAcuB,KAAI,SAACC,GAC/BN,QAAQC,IAAI,YAAaK,EAAK7C,OAC9BmC,EAAkBU,EAAKhC,WACvBuB,EAAUS,EAAK/B,QACfuB,EAAaQ,EAAKhC,WAClByB,EAAUO,EAAK7B,QACfY,EAAgBiB,EAAK7C,OC3CD,SAACA,EAAY8B,EAA+BE,GACtE,OAAQhC,GACN,IAAK,cACH8B,EAAO,WACPE,EAAO,WACP,MACF,IAAK,iBACHF,EAAO,SACPE,EAAO,OACP,MACF,IAAK,aACHF,EAAO,SACPE,EAAO,SACP,MACF,IAAK,YACHF,EAAO,SACPE,EAAO,SACP,MACF,IAAK,cACHF,EAAO,SACPE,EAAO,SACP,MACF,IAAK,gBACHF,EAAO,SACPE,EAAO,SACP,MACF,IAAK,QACHF,EAAO,SACPE,EAAO,SACP,MACF,IAAK,cACHF,EAAO,SACPE,EAAO,QACP,MACF,IAAK,SACHF,EAAO,SACPE,EAAO,SACP,MACF,IAAK,YACHF,EAAO,SACPE,EAAO,SACP,MACF,IAAK,QACHF,EAAO,SACPE,EAAO,SACP,MACF,IAAK,QACHF,EAAO,SACPE,EAAO,SACP,MACF,IAAK,SACHF,EAAO,SACPE,EAAO,SACP,MACF,IAAK,UACHF,EAAO,SACPE,EAAO,SACP,MACF,IAAK,YACHF,EAAO,SACPE,EAAO,SACP,MACF,IAAK,UACHF,EAAO,SACPE,EAAO,SACP,MACF,IAAK,iBACHF,EAAO,SACPE,EAAO,SACP,MACF,IAAK,SACHF,EAAO,SACPE,EAAO,SACP,MACF,IAAK,eACHF,EAAO,SACPE,EAAO,SACP,MACF,IAAK,YACHF,EAAO,SACPE,EAAO,SACP,MACF,IAAK,oBACHF,EAAO,SACPE,EAAO,SACP,MACF,IAAK,cACHF,EAAO,SACPE,EAAO,SACP,MACF,IAAK,MACHF,EAAO,SACPE,EAAO,QACP,MACF,IAAK,aACHF,EAAO,SACPE,EAAO,SACP,MACF,IAAK,U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","file":"static/js/main.05c38421.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\n// import { Container, Col, Row } from 'react-bootstrap';\n// import Card from \"react-bootstrap/Card\";\nimport './CountryCaseStatus.css'\nimport { fetchCountryData } from '../../actions/countryDataAction'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ICountryData } from '../../reducers/countryDataReducer'\n\nfunction CountryCaseStatus() {\n\n  const dispatch = useDispatch()\n  const countryData = useSelector((state: ICountryData) => state.countryData)\n\n  useEffect(() => {\n    // console.log('component mounted data', countryData)\n    dispatch(fetchCountryData())\n  }, [])  \n\n\n\n  return (\n    <div className=\"mainSection\">\n      <div className=\"subCardDiv\">\n        <div className=\"caseTitle\">Total Confirmed Cases</div>\n        <div className=\"caseCount\">{countryData.confirmed}</div>\n      </div>\n      <div className=\"subCardDiv\">\n        <div className=\"caseTitle\">Active Cases</div>\n        <div className=\"caseCount\">{countryData.active}</div>\n      </div>\n      <div className=\"subCardDiv\">\n        <div className=\"caseTitle\">Recovered Cases</div>\n        <div className=\"caseCount\">{countryData.recovered}</div>\n      </div>\n      <div className=\"subCardDiv\">\n        <div className=\"caseTitle\">Deaths</div>\n        <div className=\"caseCount\">{countryData.deaths}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default CountryCaseStatus\n","import axios from 'axios'\nimport { ICountryData } from '../reducers/countryDataReducer'\n\nexport const fetchCountryDataSuccess = (countryData: ICountryData) => {\n  return {\n    type: \"FETCH_COUNTRYDATA_SUCCESS\",\n    payload: countryData\n  }\n}\n\nexport const fetchCountryDataFailure = (error: any) => {\n  return {\n    type: \"FETCH_COUNTRYDATA_FAILURE\",\n    payload: error\n  }\n}\n\nexport const fetchCountryData = () => {\n  return (dispatch: any) => {\n    // console.log('action call')\n    axios.get(\"https://api.covidindiatracker.com/total.json\")\n      .then((response) => {\n        // debugger\n        // console.log(\"response is \", response.data)\n        const data:ICountryData = response.data\n        dispatch(fetchCountryDataSuccess(data))\n      })\n      .catch((error) => {\n        // console.log(\"error is\", error)\n        dispatch(fetchCountryDataFailure(error))\n      })\n  }\n}","import React from 'react'\n\nfunction Header() {\n  return (\n    <div>\n      <h1 style={{fontWeight:100}} >Covid 19 Tracker India</h1>\n    </div>\n  )\n}\n\nexport default Header\n","import React, { Component, useEffect, useState } from 'react'\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet'\nimport { switchStates } from './SwitchStates'\n// import '../../../node_modules/leaflet/dist/leaflet.css'\n// import 'leaflet/dist/leaflet.css'\n\nexport interface IProps {\n  filteredData: any;\n  pieConfirmedTotal: any;\n  pieActive: any;\n  pieRecovered: any;\n  pieDeaths: any;\n}\n\nfunction MapView({ filteredData, pieConfirmedTotal, pieActive, pieRecovered, pieDeaths }: IProps) {\n\n  const [currentPlace, setCurrentPlace] = useState('India')\n  const [lat, setLat] = useState(20.5937)\n  const [lng, setLng] = useState(78.9629)\n  const [zoom, setZoom] = useState(13)\n  const [totalConfirmed, setTotalConfirmed] = useState()\n  const [active, setActive] = useState()\n  const [recovered, setRecovered] = useState()\n  const [deaths, setDeaths] = useState()\n\n  useEffect(() => {\n    console.log('map Data ', filteredData)\n    console.log('data length', filteredData.length)\n\n    if (filteredData.length > 1) {\n      setLat(20.5937)\n      setLng(78.9629)\n      setTotalConfirmed(pieConfirmedTotal)\n      setActive(pieActive)\n      setRecovered(pieRecovered)\n      setDeaths(pieDeaths)\n    } else {\n      Object.values(filteredData).map((item: any) => {\n        console.log('map state', item.state)\n        setTotalConfirmed(item.confirmed)\n        setActive(item.active)\n        setRecovered(item.confirmed)\n        setDeaths(item.deaths)\n        setCurrentPlace(item.state)\n        switchStates(item.state, setLat, setLng)\n      })\n    }\n\n\n\n  })\n\n\n  const position: [number, number] = [lat, lng]\n  return (\n    <Map center={position} zoom={zoom}>\n      <TileLayer\n        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      <Marker position={position}>\n        <Popup>\n          {currentPlace}<br />total confirmed -{totalConfirmed} <br /> active -{active}<br /> recovered -{recovered}<br /> deaths -{deaths}\n        </Popup>\n      </Marker>\n    </Map>\n  )\n\n}\nexport default MapView;\n","export const switchStates = (state: any, setLat: (lat: number) => void, setLng: (lng: number) => void) => {\n  switch (state) {\n    case 'Maharashtra':\n      setLat(19.601194)\n      setLng(75.552979)\n      break\n    case 'Andhra Pradesh':\n      setLat(15.9129)\n      setLng(79.7400)\n      break\n    case 'Tamil Nadu':\n      setLat(11.1271)\n      setLng(78.6569)\n      break\n    case 'Karnataka':\n      setLat(15.3173)\n      setLng(75.7139)\n      break\n    case 'Maharashtra':\n      setLat(19.7515)\n      setLng(75.7139)\n      break\n    case 'Uttar Pradesh':\n      setLat(26.8467)\n      setLng(80.9462)\n      break\n    case 'Delhi':\n      setLat(28.7041)\n      setLng(77.1025)\n      break\n    case 'West Bengal':\n      setLat(22.9868)\n      setLng(87.8550)\n      break\n    case 'Odisha':\n      setLat(20.9517)\n      setLng(85.0985)\n      break\n    case 'Telangana':\n      setLat(18.1124)\n      setLng(79.0193)\n      break\n    case 'Bihar':\n      setLat(25.0961)\n      setLng(85.3131)\n      break\n    case 'Assam':\n      setLat(26.2006)\n      setLng(92.9376)\n      break\n    case 'Kerala':\n      setLat(10.8505)\n      setLng(76.2711)\n      break\n    case 'Gujarat':\n      setLat(22.2587)\n      setLng(71.1924)\n      break\n    case 'Rajasthan':\n      setLat(27.0238)\n      setLng(74.2179)\n      break\n    case 'Haryana':\n      setLat(29.0588)\n      setLng(76.0856)\n      break\n    case 'Madhya Pradesh':\n      setLat(22.9734)\n      setLng(78.6569)\n      break\n    case 'Punjab':\n      setLat(31.1471)\n      setLng(75.3412)\n      break\n    case 'Chhattisgarh':\n      setLat(21.2514)\n      setLng(81.6296)\n      break\n    case 'Jharkhand':\n      setLat(23.6102)\n      setLng(85.2799)\n      break\n    case 'Jammu and Kashmir':\n      setLat(33.7782)\n      setLng(76.5762)\n      break\n    case 'Uttarakhand':\n      setLat(30.0668)\n      setLng(79.0193)\n      break\n    case 'Goa':\n      setLat(15.2993)\n      setLng(74.1240)\n      break\n    case 'Puducherry':\n      setLat(11.9416)\n      setLng(79.8083)\n      break\n    case 'Tripura':\n      setLat(23.9408)\n      setLng(91.9882)\n      break\n    case 'Himachal Pradesh':\n      setLat(31.1048)\n      setLng(77.1734)\n      break\n    case 'Chandigarh':\n      setLat(30.7333)\n      setLng(76.7794)\n      break\n    case 'Manipur':\n      setLat(24.6637)\n      setLng(93.9063)\n      break\n    case 'Arunachal Pradesh':\n      setLat(28.2180)\n      setLng(94.7278)\n      break\n    case 'Nagaland':\n      setLat(26.1584)\n      setLng(94.5624)\n      break\n    case 'Meghalaya':\n      setLat(25.4670)\n      setLng(91.3662)\n      break\n    case 'Ladakh':\n      setLat(34.152588)\n      setLng(77.577049)\n      break\n    case 'Andaman and Nicobar Islands':\n      setLat(11.7401)\n      setLng(92.6586)\n      break\n    case 'Sikkim':\n      setLat(27.5330)\n      setLng(88.5122)\n      break\n    case 'Mizoram':\n      setLat(23.1645)\n      setLng(92.9376)\n      break\n    case 'Daman and Diu':\n      setLat(20.4283)\n      setLng(72.8397)\n      break\n    case 'Dadra and Nagar Haveli':\n      setLat(20.1809)\n      setLng(73.0169)\n      break\n    case 'Lakshadweep':\n      setLat(8.295441)\n      setLng(73.048973)\n      break\n    default:\n      setLat(20.5937)\n      setLng(78.9629)\n      break\n  }\n}","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport CountryCaseStatus from '../CountryCaseStatus/CountryCaseStatus';\nimport { fetchallStatesData } from '../../actions/allStatesTotalDataAction'\nimport { IAllStatesTotalData } from '../../reducers/allStatesTotalDataReducer';\nimport './StateSelector.css'\nimport * as Plotly from 'plotly.js';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet'\nimport MapView from '../MapView/MapView';\n\nfunction StateSelector() {\n  const [totalData, setTotalData] = useState({})\n  const [currentState, setcurrentState] = useState('')\n  const [filteredData, setFilteredData] = useState({})\n\n  const dispatch = useDispatch()\n  const { allStatesTotalData, loading } = useSelector<IAllStatesTotalData, IAllStatesTotalData>((state: IAllStatesTotalData) => {\n    return {\n      allStatesTotalData: state.allStatesTotalData,\n      loading: state.loading,\n    }\n  })\n\n  //Pie Chart\n\n  // const pieData = Object.values(filteredData).map((item: any) => (\n  //   item.confirmed\n  // ))\n\n  const pieConfirmedtotal = Object.values(filteredData).reduce((t: number, { confirmed }: any) => t + confirmed, 0)\n  const pieActive = Object.values(filteredData).reduce((t: number, { active }: any) => t + active, 0)\n  const pieRecovered = Object.values(filteredData).reduce((t: number, { recovered }: any) => t + recovered, 0)\n  const pieDeaths = Object.values(filteredData).reduce((t: number, { deaths }: any) => t + deaths, 0)\n  // console.log('pieData', pieData)\n  console.log('pieConfirmedtotal-', pieConfirmedtotal, ',pieActive-', pieActive, ',-pieRecovered-', pieRecovered, '-pieDeaths', pieDeaths)\n  // debugger\n  useEffect(() => {\n    var data: any = [{\n      values: [pieConfirmedtotal, pieActive, pieRecovered, pieDeaths],\n      // value:[123456789,123456789,123456789,123456789],\n      labels: ['Total Confirmed Cases', 'Active Cases', 'Recovered Cases', 'Deaths'],\n      type: 'pie'\n    }];\n\n    var layout = {\n      height: 400,\n      width: 500\n    };\n\n    var bardata = [\n      {\n        x: ['Total Confirmed Cases', 'Active Cases', 'Recovered Cases', 'Deaths'],\n        y: [pieConfirmedtotal, pieActive, pieRecovered, pieDeaths],\n        // type: 'a'\n      }\n    ];\n\n    Plotly.newPlot('pieChart', data, layout);\n    Plotly.newPlot('barChart', bardata);\n  }, [pieConfirmedtotal])\n\n  //\n\n  useEffect(() => {\n    dispatch(fetchallStatesData())\n    console.log('allStatesData ', allStatesTotalData)\n  }, [])\n\n  useEffect(() => {\n    console.log(allStatesTotalData)\n    setTotalData(allStatesTotalData)\n    setFilteredData(allStatesTotalData)\n    console.log('totalData', totalData)\n    // debugger\n\n  }, [allStatesTotalData])\n\n\n  useEffect(() => {\n    console.log('totalData after updation', totalData)\n    Object.values(totalData).map((item: any) => {\n      console.log('kk', item)\n    })\n  }, [totalData])\n\n  useEffect(() => {\n    console.log(\"current state\", currentState)\n    const filteredData = Object.values(totalData).filter((item: any) => {\n      return (\n        item.state == currentState\n      )\n    })\n    setFilteredData(filteredData)\n  }, [currentState])\n\n  const setcurrentStateFn = (value: any) => {\n    if (value != 0) {\n      setcurrentState(value)\n    } else {\n      setFilteredData(allStatesTotalData)\n    }\n  }\n  const position: any = [20.5937, 78.9629];\n\n  return (\n    <div>\n      <div>\n        <label style={{ padding: '10px' }}>Filter By State</label>\n\n        <select onChange={(e) => setcurrentStateFn(e.target.value)} style={{ width: '85%', padding: '10px' }}>\n          <option value={0}>All</option>\n          {Object.values(totalData).map((item: any) => {\n            return (\n              <option key={item.state} value={item.state}>{item.state} - ({item.id})</option>\n            );\n          })}\n        </select>\n      </div>\n      <div className=\"mainTableSection\">\n\n        <table>\n          <tr>\n            <th>State</th>\n            <th>Total Confirmed Cases</th>\n            <th>Active Cases</th>\n            <th>Recovered Cases</th>\n            <th>Deaths</th>\n          </tr>\n          {Object.values(filteredData).map((item: any) => (\n            <tr>\n              <td>{item.state}</td>\n              <td>{item.confirmed}</td>\n              <td>{item.active}</td>\n              <td>{item.recovered}</td>\n              <td>{item.deaths}</td>\n            </tr>\n          ))}\n        </table>\n      </div>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div id=\"pieChart\" className=\"col 4  \" ></div>\n          <div id=\"barChart\" className=\"col 4  \" ></div>\n          <div className=\"col 4  \">\n            <MapView\n              filteredData={filteredData}\n              pieConfirmedTotal={pieConfirmedtotal}\n              pieActive={pieActive}\n              pieRecovered={pieRecovered}\n              pieDeaths={pieDeaths}\n            />\n          </div>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\n\nexport default StateSelector\n","import axios from 'axios'\nimport { IAllStatesTotalData } from '../reducers/allStatesTotalDataReducer'\n\n\nexport const fetchallStatesTotalDataSuccess = (allStatesTotalData: IAllStatesTotalData[]) => {\n  return {\n    type: \"FETCH_ALLSTATESDATA_SUCCESS\",\n    payload: allStatesTotalData\n  }\n}\n\nexport const fetchallStatesTotalDataFailure = (error: any) => {\n  return {\n    type: \"FETCH_ALLSTATESDATA_FAILURE\",\n    payload: error\n  }\n}\n\nexport const fetchallStatesData = () => {\n  return (dispatch: any) => {\n    console.log('all states data')\n    axios.get(\"https://api.covidindiatracker.com/state_data.json\")\n      .then((response) => {\n        // debugger\n        console.log(\"response all states  \", response.data)\n        const data = response.data\n        dispatch(fetchallStatesTotalDataSuccess(data))\n      })\n      .catch((error) => {\n        console.log(\"error all states\", error)\n        dispatch(fetchallStatesTotalDataFailure(error))\n      })\n  }\n}","import React from 'react';\nimport './App.css';\nimport CountryCaseStatus from './components/CountryCaseStatus/CountryCaseStatus';\nimport Header from './components/Header/Header';\nimport StateSelector from './components/StateSelector/StateSelector';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <CountryCaseStatus />\n      <StateSelector/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export interface ICountryData {\n  countryData: IData\n}\n\nexport interface IData {\n  active?: number;\n  recovered?: number;\n  deaths?: number;\n  confirmed?: number;\n}\n\nexport interface IAction {\n  type: string,\n  payload: any\n}\n\nconst initialState: ICountryData = {\n  countryData: {}\n}\n\nconst countryDataReducer = (state: ICountryData = initialState, action: IAction) => {\n  switch (action.type) {\n    case 'FETCH_COUNTRYDATA_SUCCESS':\n      return action.payload\n    case 'FETCH_COUNTRYDATA_FAILURE':\n      return action.payload\n    default:\n      return state\n  }\n}\nexport default countryDataReducer","export interface IAllStatesTotalData {\n  allStatesTotalData: IStateData[],\n  loading: boolean\n}\n\nexport interface IStateData {\n  active?: number;\n  recovered?: number;\n  deaths?: number;\n  confirmed?: number;\n  state?: string;\n}\n\nexport interface IAction {\n  type: string,\n  payload: any\n}\n\nconst initialState: IAllStatesTotalData = {\n  allStatesTotalData: [],\n  loading: false\n}\n\nconst allStatesDataReducer = (state:IAllStatesTotalData = initialState, action: IAction) => {\n  switch (action.type) {\n    case 'FETCH_ALLSTATESDATA_SUCCESS':\n      // return {...state, allStatesTotalData: [...state.allStatesTotalData, action.payload], loading:true}\n      return action.payload\n    case 'FETCH_ALLSTATESDATA_FAILURE':\n      // return {...state, allStatesTotalData: [...state.allStatesTotalData, action.payload], loading:true}\n      return action.payload\n    default:\n      return state\n  }\n}\nexport default allStatesDataReducer","import { combineReducers } from 'redux';\nimport countryDataReducer from './countryDataReducer'\nimport allStatesDataReducer from './allStatesTotalDataReducer'\n\nconst rootReducers = combineReducers({\n  countryData: countryDataReducer,\n  allStatesTotalData: allStatesDataReducer,\n})\nexport default rootReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux'\nimport rootReducers from './reducers'\nconst store = createStore(rootReducers, composeWithDevTools(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}